%!PS-Adobe-2.0
%%Title: polar_quadrotor_verisig_12_steps_z_vz_0.eps
%%Creator: gnuplot 5.2 patchlevel 2
%%CreationDate: Wed Mar  9 22:41:48 2022
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (polar_quadrotor_verisig_12_steps_z_vz_0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 2)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Mar  9 22:41:48 2022)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
770 448 M
63 0 V
6114 0 R
-63 0 V
stroke
686 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 1338 M
63 0 V
6114 0 R
-63 0 V
stroke
686 1338 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.05)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 2228 M
63 0 V
6114 0 R
-63 0 V
stroke
686 2228 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 3119 M
63 0 V
6114 0 R
-63 0 V
stroke
686 3119 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.15)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 4009 M
63 0 V
6114 0 R
-63 0 V
stroke
686 4009 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 4899 M
63 0 V
6114 0 R
-63 0 V
stroke
686 4899 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.25)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 448 M
0 63 V
0 4388 R
0 -63 V
stroke
770 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1542 448 M
0 63 V
0 4388 R
0 -63 V
stroke
1542 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.002)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2314 448 M
0 63 V
0 4388 R
0 -63 V
stroke
2314 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.004)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3086 448 M
0 63 V
0 4388 R
0 -63 V
stroke
3086 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.006)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3859 448 M
0 63 V
0 4388 R
0 -63 V
stroke
3859 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.008)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4631 448 M
0 63 V
0 4388 R
0 -63 V
stroke
4631 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5403 448 M
0 63 V
0 4388 R
0 -63 V
stroke
5403 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.012)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6175 448 M
0 63 V
0 4388 R
0 -63 V
stroke
6175 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.014)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6947 448 M
0 63 V
0 4388 R
0 -63 V
stroke
6947 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.016)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
770 4899 N
770 448 L
6177 0 V
0 4451 V
-6177 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
126 2673 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (x6)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3858 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (x3)]
] -46.7 MCshow
LTb
% Begin plot #1
1.000 UL
LTb
0.00 0.00 1.00 C 770 484 M
0 -36 V
0 36 V
2 35 R
-1 0 V
-1 0 V
0 -35 V
2 0 V
0 35 V
1 36 R
-1 0 V
0 -36 V
1 0 V
0 36 V
3 35 R
-3 0 V
0 -35 V
3 0 V
0 35 V
4 36 R
-1 0 V
-3 0 V
0 -36 V
4 1 V
0 35 V
4 36 R
-4 -1 V
0 -35 V
4 0 V
0 36 V
5 35 R
-5 0 V
0 -35 V
5 0 V
0 35 V
6 36 R
-1 0 V
-5 0 V
0 -36 V
6 1 V
0 35 V
6 35 R
-6 0 V
0 -35 V
6 0 V
0 35 V
8 36 R
-1 0 V
-7 0 V
0 -36 V
8 1 V
0 35 V
8 36 R
-1 0 V
-7 -1 V
0 -35 V
8 0 V
0 36 V
9 35 R
-1 0 V
-8 0 V
0 -35 V
9 0 V
0 35 V
9 36 R
-9 -1 V
0 -35 V
9 1 V
0 35 V
11 36 R
-1 0 V
-10 -1 V
0 -35 V
11 0 V
0 36 V
11 35 R
-1 0 V
-10 0 V
0 -35 V
11 0 V
0 35 V
12 36 R
-1 0 V
-11 -1 V
0 -35 V
12 1 V
0 35 V
13 35 R
-1 0 V
-12 0 V
0 -35 V
13 0 V
0 35 V
13 36 R
-13 -1 V
0 -35 V
13 1 V
0 35 V
14 36 R
-14 -1 V
0 -35 V
14 1 V
0 35 V
15 35 R
-15 -1 V
0 -34 V
15 0 V
0 35 V
16 36 R
-16 -1 V
0 -35 V
16 1 V
0 35 V
17 35 R
-1 0 V
-16 0 V
0 -35 V
17 1 V
0 34 V
17 36 R
-17 -1 V
0 -35 V
17 1 V
0 35 V
18 36 R
-18 -1 V
0 -35 V
18 1 V
0 35 V
19 35 R
-19 -1 V
0 -34 V
19 0 V
0 35 V
20 36 R
-20 -1 V
0 -35 V
20 1 V
0 35 V
20 35 R
-20 -1 V
0 -34 V
20 1 V
0 34 V
22 36 R
-1 0 V
-21 -1 V
0 -35 V
22 1 V
0 35 V
22 36 R
-1 0 V
-21 -1 V
0 -35 V
22 1 V
0 35 V
22 35 R
-22 -1 V
0 -34 V
22 1 V
0 34 V
24 36 R
-24 -1 V
0 -35 V
24 1 V
0 35 V
24 35 R
-24 -1 V
0 -34 V
24 1 V
0 34 V
25 36 R
-25 -1 V
0 -35 V
25 2 V
0 34 V
26 36 R
-26 -2 V
0 -34 V
26 1 V
0 35 V
27 35 R
-27 -1 V
0 -34 V
27 1 V
0 34 V
27 36 R
-27 -1 V
0 -35 V
27 2 V
0 34 V
29 35 R
-1 0 V
-28 -1 V
0 -34 V
29 1 V
0 34 V
28 36 R
-28 -1 V
0 -35 V
28 2 V
0 34 V
30 36 R
-30 -2 V
0 -34 V
30 1 V
0 35 V
31 35 R
-1 0 V
-30 -1 V
0 -34 V
31 1 V
0 34 V
31 36 R
-31 -1 V
0 -35 V
31 2 V
0 34 V
32 36 R
-32 -2 V
0 -34 V
32 1 V
0 35 V
33 35 R
-1 0 V
-32 -1 V
0 -34 V
33 1 V
0 34 V
33 36 R
-33 -2 V
0 -34 V
33 2 V
0 34 V
35 35 R
-1 0 V
-34 -1 V
0 -34 V
35 1 V
0 34 V
35 36 R
-35 -2 V
0 -34 V
35 2 V
0 34 V
36 36 R
-1 0 V
-35 -2 V
0 -34 V
36 2 V
stroke 1623 2088 M
0 34 V
36 35 R
-36 -1 V
0 -34 V
36 1 V
0 34 V
38 36 R
-38 -2 V
0 -34 V
38 2 V
0 34 V
38 35 R
-38 -1 V
0 -34 V
38 2 V
0 33 V
39 36 R
-39 -2 V
0 -34 V
39 2 V
0 34 V
40 36 R
-40 -2 V
0 -34 V
40 2 V
0 34 V
40 35 R
-40 -2 V
0 -33 V
40 1 V
0 34 V
42 36 R
-1 0 V
-41 -2 V
0 -34 V
42 2 V
0 34 V
42 35 R
-1 0 V
-41 -1 V
0 -34 V
42 2 V
0 33 V
43 36 R
-1 0 V
-42 -2 V
0 -34 V
43 2 V
0 34 V
43 36 R
-43 -2 V
0 -34 V
43 2 V
0 34 V
45 35 R
-1 0 V
-44 -2 V
0 -33 V
45 2 V
0 33 V
45 36 R
-1 0 V
-44 -2 V
0 -34 V
45 2 V
0 34 V
46 35 R
-1 0 V
-45 -2 V
0 -33 V
46 2 V
0 33 V
47 36 R
-1 0 V
-46 -2 V
0 -34 V
47 3 V
0 33 V
47 36 R
-47 -2 V
0 -34 V
47 2 V
0 34 V
48 35 R
-48 -2 V
0 -33 V
48 2 V
0 33 V
49 36 R
-49 -2 V
0 -34 V
49 3 V
0 33 V
50 36 R
-50 -3 V
0 -33 V
50 2 V
0 34 V
51 35 R
-1 0 V
-50 -2 V
0 -33 V
51 2 V
0 33 V
51 36 R
-51 -3 V
0 -33 V
51 2 V
0 34 V
52 35 R
-52 -2 V
0 -33 V
52 2 V
0 33 V
53 36 R
-53 -2 V
0 -34 V
53 3 V
0 33 V
54 36 R
-1 0 V
-53 -3 V
0 -33 V
54 2 V
0 34 V
54 35 R
-54 -2 V
0 -33 V
54 2 V
0 33 V
55 36 R
-55 -3 V
0 -33 V
55 3 V
0 33 V
56 35 R
-56 -2 V
0 -33 V
56 2 V
0 33 V
57 36 R
-57 -3 V
0 -33 V
57 3 V
0 33 V
58 36 R
-1 0 V
-57 -3 V
0 -33 V
58 3 V
0 33 V
58 35 R
-58 -2 V
0 -33 V
58 2 V
0 33 V
59 36 R
-59 -3 V
0 -33 V
59 3 V
0 33 V
60 35 R
-1 0 V
-59 -2 V
0 -33 V
60 3 V
0 32 V
60 36 R
-60 -3 V
0 -33 V
60 3 V
0 33 V
62 36 R
-1 0 V
-61 -3 V
0 -33 V
62 3 V
0 33 V
62 35 R
-62 -3 V
0 -32 V
62 3 V
0 32 V
63 36 R
-1 0 V
-62 -3 V
0 -33 V
63 3 V
0 33 V
64 35 R
-1 0 V
-63 -2 V
0 -33 V
64 3 V
0 32 V
64 36 R
-64 -3 V
0 -33 V
64 3 V
0 33 V
65 36 R
-65 -3 V
0 -33 V
65 3 V
0 33 V
66 35 R
-66 -3 V
0 -32 V
66 3 V
0 32 V
67 36 R
-67 -3 V
0 -33 V
67 3 V
0 33 V
68 36 R
-1 0 V
-67 -4 V
0 -32 V
68 3 V
0 33 V
68 35 R
-68 -3 V
0 -32 V
68 3 V
0 32 V
69 36 R
-69 -3 V
0 -33 V
69 3 V
0 33 V
70 35 R
-70 -3 V
0 -32 V
70 3 V
0 32 V
71 36 R
-1 0 V
-70 -3 V
0 -33 V
71 4 V
0 32 V
71 36 R
-71 -4 V
0 -32 V
71 3 V
0 33 V
72 35 R
-72 -3 V
stroke 4109 3792 M
0 -32 V
72 3 V
0 32 V
73 36 R
-73 -4 V
0 -32 V
73 3 V
0 33 V
74 35 R
-74 -3 V
0 -32 V
74 3 V
0 32 V
74 36 R
-74 -3 V
0 -33 V
74 4 V
0 32 V
76 36 R
-1 0 V
-75 -4 V
0 -32 V
76 3 V
0 33 V
76 35 R
-1 0 V
-75 -3 V
0 -32 V
76 3 V
0 32 V
77 36 R
-1 0 V
-76 -4 V
0 -32 V
77 4 V
0 32 V
77 40 R
-39 0 V
-39 -1 V
0 -84 V
77 -3 V
1 0 V
0 88 V
79 41 R
-43 0 V
-38 -2 V
0 -172 V
77 -3 V
3 0 V
1 0 V
0 177 V
79 40 R
-47 0 V
-38 -1 V
0 -261 V
77 -3 V
7 0 V
1 0 V
0 265 V
81 41 R
-53 0 V
-39 -2 V
0 -349 V
76 -4 V
14 0 V
2 1 V
0 354 V
81 40 R
-61 0 V
-40 -1 V
0 -438 V
77 -4 V
21 0 V
3 1 V
0 442 V
82 41 R
-70 0 V
-41 -2 V
0 -526 V
76 -4 V
31 0 V
4 1 V
0 531 V
83 41 R
-81 0 V
-42 -2 V
0 -615 V
76 -4 V
41 0 V
6 1 V
0 620 V
83 40 R
-93 0 V
-44 -2 V
0 -703 V
76 -4 V
54 0 V
7 1 V
0 708 V
85 41 R
-108 0 V
-45 -2 V
0 -792 V
75 -4 V
69 0 V
9 1 V
0 797 V
86 40 R
-124 0 V
-48 -2 V
0 -881 V
76 -3 V
84 0 V
12 1 V
0 885 V
87 102 R
-78 3 V
-103 0 V
-12 0 V
0 -1107 V
78 -4 V
103 0 V
12 1 V
0 1107 V
87 30 R
-77 4 V
-123 0 V
-15 -1 V
0 -1189 V
77 -3 V
124 0 V
14 0 V
0 1189 V
87 30 R
-76 4 V
-145 0 V
-17 -1 V
0 -1270 V
77 -4 V
145 0 V
16 1 V
0 1270 V
89 30 R
-77 4 V
-168 0 V
-19 -1 V
0 -1352 V
77 -3 V
168 0 V
19 0 V
0 1352 V
89 31 R
-77 3 V
-193 0 V
-21 -1 V
0 -1434 V
77 -3 V
193 0 V
21 1 V
0 1434 V
89 30 R
-76 3 V
-221 0 V
-22 -1 V
0 -1515 V
76 -4 V
221 0 V
22 1 V
0 1516 V
91 30 R
-76 3 V
-251 0 V
-23 -1 V
0 -1597 V
75 -3 V
251 0 V
24 1 V
0 1597 V
90 30 R
-75 4 V
-282 0 V
-25 -2 V
0 -1678 V
76 -4 V
282 0 V
24 1 V
0 1679 V
92 30 R
-75 4 V
-315 0 V
-26 -2 V
0 -1760 V
75 -3 V
315 0 V
26 1 V
0 1760 V
92 30 R
-75 4 V
-350 0 V
-27 -1 V
0 -1843 V
75 -3 V
350 0 V
27 1 V
0 1842 V
% End plot #1
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
770 4899 N
770 448 L
6177 0 V
0 4451 V
-6177 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
