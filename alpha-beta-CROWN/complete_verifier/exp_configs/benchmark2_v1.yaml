# This is an example configuration file that contains most useful parameter settings.
general:
  mode: verified-acc  # Compute verified accuracy.
  #enable_incomplete_verification: False
model:
  name: benchmark2
  input_ids: [0, 1]
  plt_ids: [[0, 1]]
  path: "models/POLAR/benchmark2/nn_2_relu"
data:
  start: 0
  end: 100
  num_classes: 1
init:
  min: [0.7, 0.7]
  max: [0.9, 0.9]

#specification:
  #norm: .inf  # Linf norm (can also be 2 or 1).
  #epsilon: 100.  # epsilon=2./255.
solver:
  alpha-crown:
    iteration: 100   # Number of iterations for alpha-CROWN optimization. Alpha-CROWN is used to compute all intermediate layer bounds before branch and bound starts.
    lr_alpha: 0.1    # Learning rate for alpha in alpha-CROWN. The default (0.1) is typically ok.
  beta-crown:
    batch_size: 2048  # Number of subdomains to compute in parallel in beta-CROWN. Increase if you run out of memory.
    lr_alpha: 0.01  # Learning rate for optimizing the alpha parameters, the default (0.01) is typically ok, but you can try to tune this parameter to get better lower bound. 
    lr_beta: 0.05  # Learning rate for optimizing the beta parameters, the default (0.05) is typically ok, but you can try to tune this parameter to get better lower bound.
    iteration: 20  # Number of iterations for beta-CROWN optimization. 20 is often sufficient, 50 or 100 can also be used.
bab:
  #decision_thresh: 3
  timeout: 120  # Timeout threshold for branch and bound. Increase for verifying more points.
  branching:  # Parameters for branching heuristics.
    reduceop: min  # Reduction function for the branching heuristic scores, min or max. Using max can be better on some models.
    method: kfsb  # babsr is fast but less accurate; fsb is slow but most accurate; kfsb is usualy a balance.
    candidates: 3  # Number of candidates to consider in fsb and kfsb. More leads to slower but better branching. 3 is typically good enough.
