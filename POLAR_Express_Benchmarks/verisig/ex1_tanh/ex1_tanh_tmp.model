hybrid reachability
{
	 state var _f1, _f2, x0, x1, u, worldtime, clock

	setting
	{
		adaptive steps {min 1e-6, max 0.005}
		time 7
		remainder estimation 1e-1
		identity precondition 
		matlab octagon x0, x1
		fixed orders 4
		cutoff 1e-10
		precision 100
		output ex1_tanh_tmp
		max jumps 151
		print on
	}

	modes
	{
		m0
		{
			nonpoly ode
			{
				worldtime' = 0
				u' = 0
				x0' = 0
				x1' = 0
				_f2' = 0
				_f1' = 0
				clock' = 1
			}
			inv
			{
				clock <= 0
			}
		}
		DNNm1
		{
			nonpoly ode
			{
				worldtime' = 0
				u' = 0
				x0' = 0
				x1' = 0
				_f2' = 0
				_f1' = 0
				clock' = 1
			}
			inv
			{
				clock <= 0
			}
		}
		_cont_sys
		{
			nonpoly ode
			{
				worldtime' = 1.0
				u' = 0.0
				x0' = x1
				x1' = u * x1 * x1 - x0
				_f2' = 0.0
				clock' = 1.0
				_f1' = 0.0
			}
			inv
			{
				clock <= 0.2
			}
		}
		unsafe1
		{
			nonpoly ode
			{
				worldtime' = 0.0
				u' = 0.0
				x0' = 0.0
				x1' = 0.0
				_f2' = 0.0
				clock' = 1.0
				_f1' = 0.0
			}
			inv
			{
				clock <= 1.0
			}
		}
		startmode
		{
			nonpoly ode
			{
				worldtime' = 0.0
				u' = 0.0
				x0' = 0.0
				x1' = 0.0
				_f2' = 0.0
				clock' = 1.0
				_f1' = 0.0
			}
			inv
			{
				clock <= 0.0
			}
		}
		unsafe2
		{
			nonpoly ode
			{
				worldtime' = 0.0
				u' = 0.0
				x0' = 0.0
				x1' = 0.0
				_f2' = 0.0
				clock' = 1.0
				_f1' = 0.0
			}
			inv
			{
				clock <= 1.0
			}
		}
		unsafe3
		{
			nonpoly ode
			{
				worldtime' = 0.0
				u' = 0.0
				x0' = 0.0
				x1' = 0.0
				_f2' = 0.0
				clock' = 1.0
				_f1' = 0.0
			}
			inv
			{
				clock <= 1.0
			}
		}
		unsafe4
		{
			nonpoly ode
			{
				worldtime' = 0.0
				u' = 0.0
				x0' = 0.0
				x1' = 0.0
				_f2' = 0.0
				clock' = 1.0
				_f1' = 0.0
			}
			inv
			{
				clock <= 1.0
			}
		}
	}
	jumps
	{
		m0 -> DNNm1
		guard { }
		reset { clock' := 0 }
		interval aggregation
		_cont_sys -> unsafe1
		guard { worldtime = 7.0 x0 >= 0.2 }
		reset { clock' := 0.0 }
		interval aggregation
		_cont_sys -> unsafe2
		guard { worldtime = 7.0 x0 <= 0.0 }
		reset { clock' := 0.0 }
		interval aggregation
		_cont_sys -> unsafe3
		guard { worldtime = 7.0 x1 <= 0.05 }
		reset { clock' := 0.0 }
		interval aggregation
		_cont_sys -> unsafe4
		guard { worldtime = 7.0 x1 >= 0.3 }
		reset { clock' := 0.0 }
		interval aggregation
		DNNm1 -> _cont_sys
		guard { }
		reset { u' := 4.0 * _f1 clock' := 0.0 }
		interval aggregation
		_cont_sys -> m0
		guard { clock = 0.2 }
		reset { _f2' := x1 _f1' := x0 clock' := 0.0 }
		interval aggregation
		startmode -> m0
		guard { clock = 0.0 }
		reset { _f2' := x1 _f1' := x0 clock' := 0.0 }
		interval aggregation
	}
	init
	{
		startmode
		{
			x0 in [0.8, 0.9]
			x1 in [0.5, 0.6]
			_f1 in [0, 0]
			_f2 in [0, 0]
			u in [0, 0]
			worldtime in [0, 0]
			clock in [0, 0]
		}
	}
}
unsafe
{
	unsafe1
	{
		x0 >= 0.2
	}
	unsafe2
	{
		x0 <= 0
	}
	unsafe3
	{
		x1 <= 0.05
	}
	unsafe4
	{
		x1 >= 0.3
	}
}